# -*- coding: UTF-8 -*-import pandasfrom global_values import *from logs import *from merchant import *from compute_month_sales import *def split_data_df_by_month(data_df, start_month, end_month):    return data_df[((data_df.Date_received != 'null') &                    ((months_first_days[start_month - 1] <= data_df.Date_received) &                     (data_df.Date_received < months_first_days[end_month])))                   | ((data_df.Date_received == 'null') &                      ((months_first_days[start_month - 1] <= data_df.Date) &                       (data_df.Date < months_first_days[end_month])))]def grouped_and_compute_merchant_features(offline_data_df, start_month, end_month):    all_merchants_used_coupons = len(offline_data_df[(offline_data_df.Coupon_id != 'null') & (offline_data_df.Date != 'null')].index)    # print all_merchants_used_coupons    all_merchant_month_sales = compute_month_sales(offline_data_df.values,                                                   start_month, end_month)    merchant_list = {}    process_cnt = 0    for m_id, group in offline_data_df.groupby('Merchant_id'):        offline_data = offline_data_df[offline_data_df.Merchant_id == m_id].values        mer = Merchant(m_id, start_month, end_month, offline_data)        mer.compute_all_features(all_merchants_used_coupons, all_merchant_month_sales)        merchant_list[m_id] = mer.to_record()        process_cnt += 1        if process_cnt >= 200 and process_cnt % 200 == 0:            log_info("已处理" + str(process_cnt) + "组数据")        # print mer.to_record()    return merchant_listdef write_csv(filename, data, text):    log_info("写入" + text + "文件")    df = pandas.DataFrame(data)    df.to_csv(filename, index=False, header=csv_header)if __name__ == "__main__":    # 读取文件    log_info("读取文件")    offline_data_train_df = pandas.read_csv('..\..\data\ccf_offline_stage1_train.csv')    # 计算特征    train_months = 6    offline_data_dfs = []    merchant_lists = []    for i in range(0, train_months):        log_info("用"+str(i+1)+"月数据得到"+str(i+2)+"月特征")        offline_data_dfs.append(split_data_df_by_month(offline_data_train_df, i+1, i+1))        log_info("分组计算特征")        merchant_lists.append(grouped_and_compute_merchant_features(offline_data_dfs[i], i+1, i+1))    del offline_data_train_df    # 写入文件    log_info("写入文件")    # 生成2-6月按序的特征    log_info("生成要写入内容")    merchant_features = []    for i in range(0, train_months-1):        merchant_features.append([])        for m in offline_data_dfs[i+1][offline_data_dfs[i+1].Coupon_id != 'null'].values:            merchant_id = m[MERCHANT_ID]            if merchant_id in merchant_lists[i]:                merchant_features[i].append(merchant_lists[i][merchant_id])            else:                merchant_features[i].append(default_values)    del offline_data_dfs    record_len = len(merchant_features[0][0])    csv_header = [i for i in range(100, 100+record_len)]    # 2345    write_csv("..\..\data\merchant_features_2_5.csv",              merchant_features[0] + merchant_features[1] + merchant_features[2] + merchant_features[3], "2-5月")    # 6    write_csv("..\..\data\merchant_features_6.csv", merchant_features[4], "6月")    # 23456    write_csv("..\..\data\merchant_features_2_6.csv",merchant_features[0] + merchant_features[1] +              merchant_features[2] + merchant_features[3] + merchant_features[4], "2-6月")    # 7    # 先取得测试数据顺序    offline_data_test_df = pandas.read_csv('..\..\data\ccf_offline_stage1_test_revised.csv')    test_data_merchant_ids = offline_data_test_df['Merchant_id'].values    del offline_data_test_df    # 生成要写入列表    log_info("写入7月文件")    merchant_features_7 = []    for i in test_data_merchant_ids:        if i in merchant_lists[5]:            merchant_features_7.append(merchant_lists[5][i])        else:            merchant_features_7.append(default_values)    del merchant_lists    del test_data_merchant_ids    # 写入    write_csv("..\..\data\merchant-features_7.csv", merchant_features_7, "7月")    log_info("运行完毕")# 下一步：# 小数据测特征求的对不对# 剩余特征# auc评价特征# 未出现商户id的问题